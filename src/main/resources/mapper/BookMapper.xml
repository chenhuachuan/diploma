<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jz1501.chenhc.diploma.tfbook.dao.BookMapper">

    <resultMap type="Book" id="all_columns_map">
        <id column="id" property="bookId"/>
        <result column="sort_id" property="sortId"/>
        <result column="book_name" property="bookName"/>
        <result column="author" property="author"/>
        <result column="publish_company" property="publishCompany"/>
        <result column="publish_time" property="publishTime"/>
        <result column="word_count" property="wordCount"/>
        <result column="kai_ben" property="kaiBen"/>
        <result column="page_count" property="pageCount"/>
        <result column="repertory" property="repertory"/>
        <result column="book_price" property="bookPrice"/>
        <result column="original_price" property="originalPrice"/>
        <result column="isbn" property="isbn"/>
        <result column="book_intro" property="bookIntro"/>
        <result column="sale_count" property="saleCount"/>
        <result column="img_url" property="imgUrl"/>
        <result column="recommend" property="commend"/>
        <result column="status" property="status"/>
    </resultMap>

    <sql id="all_book_column">
        id,sort_id,book_name,author,publish_company,publish_time,word_count,kai_ben,page_count,repertory,book_price,original_price,isbn,book_intro,sale_count,img_url,recommend,status
    </sql>
    <!-- 手动映射 -->
    <select id="selectBookByPublishTime" resultMap="all_columns_map">
        SELECT
        <include refid="all_book_column"/>
        FROM tf_book where status!='0' ORDER BY publish_time DESC LIMIT 0,3
    </select>

    <select id="selectBookByPublishTimeTwo" resultMap="all_columns_map">
        SELECT
        <include refid="all_book_column"/>
        FROM tf_book where status!='0' ORDER BY publish_time DESC LIMIT 3,3
    </select>
    <select id="selectBookByPublishTimeBG" resultMap="all_columns_map">
        SELECT
        <include refid="all_book_column"/>
        FROM tf_book ORDER BY publish_time DESC LIMIT 0,5
    </select>
    <!--end 新书上架-->

    <!--编辑推荐-->
    <select id="selectBookByRecommend" resultMap="all_columns_map">
        select
        <include refid="all_book_column"/>
        from tf_book where status!='0' ORDER BY RAND() LIMIT 3
    </select>

    <!--热销图书-->
    <select id="selectBooksBySaleCount" resultMap="all_columns_map">
        select
        <include refid="all_book_column"/>
        from tf_book where status!='0' ORDER BY sale_count desc limit 0, 5
    </select>

    <!--今日特价-->
    <select id="selectBooksBySpecialPrice" resultMap="all_columns_map">
        select
        <include refid="all_book_column"/>
        from tf_book where sale_count >3 and status!='0' ORDER BY RAND() LIMIT 4
    </select>

    <!--二级分类-->
    <select id="selectSecondBooksById" resultMap="all_columns_map">
        select
        b.id,b.sort_id,b.book_name,b.author,b.publish_company,b.publish_time,b.word_count,b.kai_ben,b.page_count,b.repertory,b.book_price,b.original_price,b.isbn,b.book_intro,b.sale_count,b.img_url,b.recommend
        from tf_sort p join tf_sort s on p.id=s.parent_id
        join tf_sort g on s.id=g.parent_id
        join tf_book b on g.id=b.sort_id
        where b.repertory!=0 and b.status!='0' and
        <if test="parSortId!=null and parSortId!='' and sonSortId==null">
            p.id=#{parSortId}
        </if>
        <if test="parSortId!=null and sonSortId!=null and sonSortId!='' and granSortId==null">
            s.id=#{sonSortId}
        </if>
        <if test="parSortId!=null and sonSortId!=null and granSortId!=null and granSortId!=null">
            g.id=#{granSortId}
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='pop'">
            ORDER BY sale_count desc
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='new'">
            ORDER BY publish_time desc
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='discount'">
            ORDER BY original_price-book_price desc
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='price'">
            ORDER BY book_price desc
        </if>
        limit #{pageIndex},#{pageSize}
    </select>
    <!--总条数-->
    <select id="selectAllCountBySortId" resultType="Integer">
        select count(1)
        from tf_sort p
        join tf_sort s on p.id=s.parent_id
        join tf_sort g on s.id=g.parent_id
        join tf_book b on g.id=b.sort_id
        where b.status!='0' and
        <if test="parSortId!=null and parSortId!='' and sonSortId==null">
            p.id=#{parSortId}
        </if>
        <if test="parSortId!=null and sonSortId!=null and sonSortId!=null and granSortId==null">
            s.id=#{sonSortId}
        </if>
        <if test="parSortId!=null and sonSortId!=null and granSortId!=null and granSortId!=null">
            g.id=#{granSortId}
        </if>
    </select>

    <!--三级页面-->
    <select id="selectBookDetailsByBookid" parameterType="String" resultMap="all_columns_map">
        select
        <include refid="all_book_column"/>
        from tf_book where id=#{bookId}
    </select>

    <!--相似推荐-->
    <select id="selectSimilarityBooksById" resultMap="all_columns_map">
        SELECT
        <include refid="all_book_column"/>
        FROM `tf_book`
        where sort_id=#{sortId} and id!=#{bookId} AND repertory!=0 and status!='0' ORDER BY sale_count desc ,
        publish_time desc LIMIT 4
    </select>


    <!--完成订单 修改数量-->
    <update id="updateBookCountBeforePurchase">
        UPDATE tf_book SET repertory=#{totalCount} where id=#{bookId}
    </update>

    <update id="updateBookSaleCountBeforePurchase">
        update tf_book set sale_count=#{saleCount} where id=#{bookId}
    </update>


    <!--搜索1-->
    <select id="selectBooksBySearch" parameterType="String" resultMap="all_columns_map">
        SELECT
        <include refid="all_book_column"/>
        FROM tf_book
        WHERE status!='0' and
        book_name LIKE #{search}
        OR author LIKE #{search}
        OR book_intro LIKE #{search}
        OR publish_company LIKE #{search}
        OR recommend LIKE #{search}
        AND repertory!=0
    </select>

    <!--首页 搜索 +排序+分页 v2.0 -->
    <select id="selectBooksInHomePage" resultMap="all_columns_map">
        SELECT
        <include refid="all_book_column"/>
        FROM tf_book
        WHERE status!='0' and
        book_name LIKE #{search}
        OR author LIKE #{search}
        OR book_intro LIKE #{search}
        OR publish_company LIKE #{search}
        OR recommend LIKE #{search}
        AND repertory!=0
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='pop'">
            ORDER BY sale_count desc
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='new'">
            ORDER BY publish_time desc
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='discount'">
            ORDER BY original_price-book_price desc
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='price'">
            ORDER BY book_price desc
        </if>
        limit #{pageIndex},#{pageSize}
    </select>
    <!--首页 搜索 总条数  v2.0 -->
    <select id="selectSearchTotalCount" parameterType="String" resultType="Integer">
        SELECT  count(1)
        FROM tf_book
        WHERE status!='0' and
        book_name LIKE #{search}
        OR author LIKE #{search}
        OR book_intro LIKE #{search}
        OR publish_company LIKE #{search}
        OR recommend LIKE #{search}
        AND repertory!=0
    </select>

    <!-- 在分类栏里 搜素 排序 分页  -->
    <select id="selectBooksInCategoryBySortFlag" resultMap="all_columns_map">
        select
        b.id,b.sort_id,b.book_name,b.author,b.publish_company,b.publish_time,b.word_count,b.kai_ben,b.page_count,b.repertory,b.book_price,b.original_price,b.isbn,b.book_intro,b.sale_count,b.img_url,b.recommend
        from tf_sort p join tf_sort s on p.id=s.parent_id
        join tf_sort g on s.id=g.parent_id
        join tf_book b on g.id=b.sort_id
        where b.repertory!=0 AND status!='0' and
        book_name LIKE #{search}
        OR author LIKE #{search}
        OR book_intro LIKE #{search}
        OR publish_company LIKE #{search}
        OR recommend LIKE #{search}
        AND
        <if test="parSortId!=null and parSortId!=''">
            p.id=#{parSortId}
        </if>
        <if test="sonSortId!=null and sonSortId!=''">
            s.id=#{sonSortId}
        </if>
        <if test="granSortId!=null and granSortId!=''">
            g.id=#{granSortId}
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='pop'">
            ORDER BY sale_count desc
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='new'">
            ORDER BY publish_time desc
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='discount'">
            ORDER BY original_price-book_price desc
        </if>
        <if test="sortFlag!= null and sortFlag!='' and sortFlag=='price'">
            ORDER BY book_price desc
        </if>
        limit #{pageIndex},#{pageSize}
    </select>

    <select id="selectSearchInCategoryTotalCount" resultType="Integer">
        select count(1)
        from tf_sort p join tf_sort s on p.id=s.parent_id
        join tf_sort g on s.id=g.parent_id
        join tf_book b on g.id=b.sort_id
        where b.repertory!=0 AND status!='0' and
        book_name LIKE #{search}
        OR author LIKE #{search}
        OR book_intro LIKE #{search}
        OR publish_company LIKE #{search}
        OR recommend LIKE #{search}
        AND
        <if test="parSortId!=null and parSortId!=''">
            p.id=#{parSortId}
        </if>
        <if test="sonSortId!=null and sonSortId!=''">
            s.id=#{sonSortId}
        </if>
        <if test="granSortId!=null and granSortId!=''">
            g.id=#{granSortId}
        </if>
    </select>


    <!--bg-->

    <resultMap type="Book" id="book_columns_and_sort">
        <id column="id" property="bookId"/>
        <result column="sort_id" property="sortId"/>
        <result column="book_name" property="bookName"/>
        <result column="author" property="author"/>
        <result column="publish_company" property="publishCompany"/>
        <result column="publish_time" property="publishTime"/>
        <result column="word_count" property="wordCount"/>
        <result column="kai_ben" property="kaiBen"/>
        <result column="page_count" property="pageCount"/>
        <result column="repertory" property="repertory"/>
        <result column="book_price" property="bookPrice"/>
        <result column="original_price" property="originalPrice"/>
        <result column="isbn" property="isbn"/>
        <result column="book_intro" property="bookIntro"/>
        <result column="sale_count" property="saleCount"/>
        <result column="img_url" property="imgUrl"/>
        <result column="recommend" property="commend"/>
        <result column="status" property="status"/>

        <association property="sort" javaType="Sort">
            <id property="sortId" column="pid"/>
            <result property="sortName" column="pname"/>
            <result property="sortCount" column="pcount"/>
            <result property="parentId" column="ppid"/>
        </association>
    </resultMap>

    <select id="selectAllBooksInfo" resultMap="book_columns_and_sort">
        SELECT
        b.id,b.sort_id,b.book_name,b.author,b.publish_company,b.publish_time,b.word_count,b.kai_ben,b.page_count,b.repertory,b.book_price,b.original_price,b.isbn,b.book_intro,b.sale_count,b.img_url,b.recommend,b.status,
        t.id pid,t.sort_name pname,t.sort_count pcount,t.parent_id ppid from tf_book b JOIN tf_sort t on b.sort_id=t.id
        where b.status!=''
        <if test="bookName!=null">
            and book_name like #{bookName}
        </if>
        limit #{index},#{row}
    </select>

    <select id="selectTotalCountBySearch" resultType="Integer" parameterType="String">
        select count(1) from tf_book where  book_name like #{bookName}
    </select>
    <select id="selectTotalCount" resultType="Integer">
        select count(1) from tf_book
    </select>

    <insert id="addNewBook" parameterType="Book">
        insert into
        tf_book(id,sort_id,book_name,author,publish_company,publish_time,word_count,kai_ben,page_count,repertory,book_price,isbn,book_intro,sale_count,img_url,recommend,original_price,status)
        values(#{bookId},#{sortId},#{bookName},#{author},#{publishCompany},#{publishTime},#{wordCount},#{kaiBen},#{pageCount},#{repertory},#{bookPrice},
        #{isbn},#{bookIntro},#{saleCount},#{imgUrl},#{commend},#{originalPrice},#{status})
    </insert>

    <update id="updateBook_DaoInfo" parameterType="Book">
        update tf_book SET
        <if test="bookName!=null and bookName!=''">
            book_name=#{bookName},
        </if>
        <if test="author!=null and author!=''">
            author=#{author},
        </if>
        <if test="pageCount!=null and pageCount!=''">
            page_count=#{pageCount},
        </if>
        <if test="wordCount!=null and wordCount!=''">
            word_count=#{wordCount},
        </if>
        <if test="publishCompany!=null and publishCompany!=''">
            publish_company=#{publishCompany},
        </if>
        <if test="publishTime!=null and publishTime!=''">
            publish_time=#{publishTime},
        </if>
        <if test="kaiBen!=null and kaiBen!=''">
            kai_ben=#{kaiBen},
        </if>
        <if test="repertory!=null and repertory!=''">
            repertory=#{repertory},
        </if>
        <if test="bookPrice!=null and bookPrice!=''">
            book_price=#{bookPrice},
        </if>
        <if test="originalPrice!=null and originalPrice!=''">
            original_price=#{originalPrice},
        </if>
        <if test="isbn!=null and isbn!=''">
            isbn=#{isbn},
        </if>
        <if test="imgUrl!=null and imgUrl!=''">
            img_url=#{imgUrl},
        </if>
        <if test="bookIntro!=null and bookIntro!=''">
            book_intro=#{bookIntro},
        </if>
        <if test="commend!=null and commend!=''">
            recommend=#{commend},
        </if>
        <if test="sortId!=null and sortId!=''">
            sort_id=#{sortId}
        </if>
        where id=#{bookId}
    </update>

    <!--下架-->
    <update id="updateBookStatus_xia" parameterType="String">
        update tf_book set status=#{status} where id=#{bookId}
    </update>

    <select id="selectBooksByPage" resultMap="all_columns_map">
        select * from tf_book limit  #{index},#{row}
    </select>
    <select id="selectBookTotalCount" resultType="Integer">
        select count(1) from tf_book
    </select>


    <select id="selectBgBooksBySearch" resultMap="all_columns_map">
        select * from tf_book where
        <if test="search!=null and search!=''">
            book_name like #{search}
        </if>
        <if test="fromDate!=null and fromDate!='' and search!=null">
            <![CDATA[
                  and publish_time >= #{fromDate}
            ]]>
        </if>
        <if test="fromDate!=null and fromDate!='' and search==null">
            <![CDATA[
                  publish_time >= #{fromDate}
                 ]]>
        </if>
        <if test="toDate!=null and toDate!='' and fromDate!=null">
            <![CDATA[ and publish_time < #{toDate} ]]>
        </if>
        <if test="toDate!=null and toDate!='' and fromDate==null">
            <![CDATA[ publish_time < #{toDate} ]]>
        </if>
        limit #{index},#{row}
    </select>

    <select id="selectBgBooksTotalCountBySearch" resultType="Integer">
        select count(1) from tf_book where
        <if test="search!=null and search!=''">
            book_name like #{search}
        </if>
        <if test="fromDate!=null and fromDate!='' and search!=null">
            <![CDATA[
                  and publish_time >= #{fromDate}
            ]]>
        </if>
        <if test="fromDate!=null and fromDate!='' and search==null">
            <![CDATA[
                  publish_time >= #{fromDate}
                 ]]>
        </if>
        <if test="toDate!=null and toDate!='' and fromDate!=null">
            <![CDATA[ and publish_time < #{toDate} ]]>
        </if>
        <if test="toDate!=null and toDate!='' and fromDate==null">
            <![CDATA[ publish_time < #{toDate} ]]>
        </if>
    </select>


</mapper>